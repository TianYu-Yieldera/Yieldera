services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment: [ALLOW_ANONYMOUS_LOGIN=yes]
    ports: ["2181:2181"]

  kafka:
    image: bitnami/kafka:3.7
    depends_on: [zookeeper]
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports: ["9092:9092"]

  postgres:
    image: postgres:16
    container_name: loyalty-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  listener:
    build:
      context: .
      dockerfile: services/listener/Dockerfile
    container_name: loyalty-listener
    depends_on: [kafka]
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_TOPIC_RAW=${KAFKA_TOPIC_RAW}
      - LISTENER_MODE=${LISTENER_MODE}
      - CHAINS_JSON=${CHAINS_JSON}
    ports: ["8090:8090"]

  consumer:
    build:
      context: .
      dockerfile: services/consumer/Dockerfile
    container_name: loyalty-consumer
    depends_on: [kafka, postgres]
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_TOPIC_RAW=${KAFKA_TOPIC_RAW}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable

  scheduler:
    build:
      context: .
      dockerfile: services/scheduler/Dockerfile
    container_name: loyalty-scheduler
    depends_on: [postgres]
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      - POINTS_RATE=${POINTS_RATE}
      - SCHEDULER_INTERVAL_SEC=${SCHEDULER_INTERVAL_SEC}

  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
    container_name: loyalty-api
    depends_on:
      postgres:
        condition: service_healthy
      vault:
        condition: service_started
      rwa:
        condition: service_started
      oracle:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      - API_PORT=${API_PORT}
      - API_ALLOW_ORIGIN=${API_ALLOW_ORIGIN}
      - VAULT_SERVICE_URL=http://vault:8081
      - RWA_SERVICE_URL=http://rwa:8082
      - ORACLE_SERVICE_URL=http://oracle:8083
    ports: ["8080:8080"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  vault:
    build:
      context: .
      dockerfile: services/vault/Dockerfile
    container_name: loyalty-vault
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      - VAULT_PORT=8081
    ports: ["8081:8081"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rwa:
    build:
      context: .
      dockerfile: services/rwa/Dockerfile
    container_name: loyalty-rwa
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      - RWA_PORT=8082
    ports: ["8082:8082"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  oracle:
    build:
      context: .
      dockerfile: services/oracle/Dockerfile
    container_name: loyalty-oracle
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      - ORACLE_PORT=8083
    ports: ["8083:8083"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: loyalty-frontend
    depends_on: [api]
    ports: ["5173:80"]

volumes:
  pgdata:
